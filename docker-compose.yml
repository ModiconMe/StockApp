services:
  stock-service:
    image: modiconme/stock-service:latest
    container_name: stock-service
    ports:
      - "8002:8002"
    networks:
      - stock-app-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      - postgres
    restart: always

  stock-cache-service:
    image: modiconme/stock-cache-service:latest
    container_name: stock-cache-service
    ports:
      - "8003:8003"
    networks:
      - stock-app-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
    depends_on:
      - postgres
      - redis
    links:
      - redis
    restart: always

  tinkoff-service:
    image: modiconme/tinkoff-service:latest
    container_name: tinkoff-service
    ports:
      - "8004:8004"
    environment:
      - "ssoToken=${SSO_TOKEN}"
    depends_on:
      - stock-service
    networks:
      - stock-app-network
    restart: always

  moex-service:
    image: modiconme/moex-service:latest
    container_name: moex-service
    ports:
      - "8005:8005"
    depends_on:
      - stock-service
    networks:
      - stock-app-network
    restart: always

  cbr-service:
    image: modiconme/cbr-service:latest
    container_name: cbr-service
    ports:
      - "8006:8006"
    depends_on:
      - stock-service
    networks:
      - stock-app-network
    restart: always

  openfigi-service:
    image: modiconme/openfigi-service:latest
    container_name: openfigi-service
    ports:
      - "8007:8007"
    depends_on:
      - stock-service
    networks:
      - stock-app-network
    restart: always

  user-service:
    image: modiconme/user-service:latest
    container_name: user-service
    ports:
      - "8080:8080"
    networks:
      - stock-app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres
    restart: always

  telegram-bot:
    image: modiconme/telegram-bot:latest
    container_name: telegram-bot
    ports:
      - "80:8081"
    networks:
      - stock-app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - "botName=${botName}"
      - "botToken=${botToken}"
      - "botOwner=${botOwner}"
    depends_on:
      - user-service
    restart: always

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server
    ports:
      - "6379:6379"
    environment:
      - "REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL"
    restart: always
    networks:
      - stock-app-network

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - stock-app-network
    restart: unless-stopped

networks:
  stock-app-network:
    driver: bridge
